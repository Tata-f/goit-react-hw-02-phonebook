{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactsList/ContactsList.module.css","components/Form/Form.module.css","components/Form/Form.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","components/Container/Container.js","App.js","index.js"],"names":["module","exports","Form","state","name","number","nameInputId","shortid","generate","numberInputId","handleInputChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","resetForm","this","className","s","form","label","htmlFor","input","id","onChange","type","pattern","title","required","button","Component","ContactsList","contacts","onDeleteContact","contactsList","map","listItem","contactInfo","contactName","contactNumber","onClick","Filter","filterContainer","Container","children","container","App","filter","addContact","contact","normalizedText","toLowerCase","includes","alert","deleteContact","contactId","prevState","changeFilter","target","getFilteredContacts","normalizedFilter","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2988d091.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__2LnFm\",\"input\":\"Filter_input__w8k7t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__tX2CS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactsList_contacts__3spl8\",\"contactsList\":\"ContactsList_contactsList__c0fHR\",\"title\":\"ContactsList_title__3TU4i\",\"contactName\":\"ContactsList_contactName__WvVhB\",\"listItem\":\"ContactsList_listItem__2Sun2\",\"button\":\"ContactsList_button__3fS8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Form_label__8hZwO\",\"input\":\"Form_input__D2FqN\",\"form\":\"Form_form__3NExA\",\"button\":\"Form_button__28l57\"};","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\nimport s from './Form.module.css';\n\nclass Form extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.string,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = shortid.generate();\n  numberInputId = shortid.generate();\n\n  handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    const { name, number } = this.state;\n\n    e.preventDefault();\n\n    this.props.onSubmit(name, number);\n\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label className={s.label} htmlFor={this.nameInputId}>\n          Name\n          <input\n            className={s.input}\n            id={this.nameInputId}\n            onChange={this.handleInputChange}\n            type=\"text\"\n            value={name}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={s.label} htmlFor={this.numberInputId}>\n          Number\n          <input\n            className={s.input}\n            id={this.numberInputId}\n            onChange={this.handleInputChange}\n            type=\"tel\"\n            value={number}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactsList.module.css';\n\nconst ContactsList = ({ contacts, onDeleteContact }) => {\n  return (\n    <div className={s.contacts}>\n      <h2 className={s.title}>Contacts</h2>\n      <ul className={s.contactsList}>\n        {contacts.map(({ id, name, number }) => (\n          <li className={s.listItem} key={id}>\n            <div className={s.contactInfo}>\n              <p className={s.contactName}>{name}:</p>{' '}\n              <p className={s.contactNumber}>{number}</p>\n            </div>\n            <button\n              className={s.button}\n              onClick={() => onDeleteContact(id)}\n              type=\"button\"\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nContactsList.propTypes = {\n  onDeleteContact: PropTypes.func,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ContactsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div className={s.filterContainer}>\n      <p className={s.title}>Find contacts by name</p>\n      <label>\n        <input\n          className={s.input}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        ></input>\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import React from 'react';\nimport s from './Container.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n","import React, { Component } from 'react';\nimport Form from './components/Form';\nimport ContactsList from './components/ContactsList';\nimport Filter from './components/Filter';\nimport Container from './components/Container';\nimport shortid from 'shortid';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  addContact = (name, number) => {\n    const { contacts } = this.state;\n    const contact = {\n      name,\n      number,\n      id: shortid.generate(),\n    };\n\n    const normalizedText = name.toLowerCase();\n    const doubledContact = contacts\n      .map(contact => contact.name.toLowerCase())\n      .includes(normalizedText);\n\n    if (doubledContact) {\n      alert(`${name} is already in contacts`);\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    }\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n\n    return (\n      <>\n        <Container>\n          <h1 className=\"title\">Phonebook</h1>\n        </Container>\n\n        <Container>\n          <Container>\n            <Form onSubmit={this.addContact}></Form>\n          </Container>\n\n          <Container>\n            <ContactsList\n              onDeleteContact={this.deleteContact}\n              contacts={filteredContacts}\n            ></ContactsList>\n          </Container>\n\n          <Container>\n            <Filter onChange={this.changeFilter} value={filter}></Filter>\n          </Container>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}